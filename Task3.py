import heapq
import networkx as nx

# Побудова графа метро Києва (спрощена версія з вагами = 1)
def build_kyiv_metro_graph():
    stations = [
        # Червона
        "Академмістечко", "Житомирська", "Святошин", "Нивки", "Берестейська", "Шулявська", "Політехнічний інститут",
        "Вокзальна", "Університет", "Театральна", "Хрещатик", "Арсенальна", "Дніпро", "Гідропарк", "Лівобережна",
        "Дарниця", "Чернігівська", "Лісова",
        # Зелена
        "Сирець", "Дорогожичі", "Лук'янівська", "Золоті ворота", "Палац спорту", "Кловська", "Печерська",
        "Звіренецька", "Видубичі", "Славутич", "Осокорки", "Позняки", "Харківська", "Вирлиця", "Бориспільська",
        "Червоний хутір",
        # Синя
        "Героїв Дніпра", "Мінська", "Оболонь", "Почайна", "Тараса Шевченка", "Контрактова площа", "Поштова площа",
        "Майдан Незалежності", "Площа Українських Героїв", "Олімпійська", "Палац \"Україна\"", "Либідська",
        "Деміївська", "Голосіївська", "Васильківська", "Виставковий центр", "Іподром", "Теремки"
    ]

    edges = [
        # Червона
        ("Академмістечко", "Житомирська"), ("Житомирська", "Святошин"), ("Святошин", "Нивки"), ("Нивки", "Берестейська"),
        ("Берестейська", "Шулявська"), ("Шулявська", "Політехнічний інститут"), ("Політехнічний інститут", "Вокзальна"),
        ("Вокзальна", "Університет"), ("Університет", "Театральна"), ("Театральна", "Хрещатик"),
        ("Хрещатик", "Арсенальна"), ("Арсенальна", "Дніпро"), ("Дніпро", "Гідропарк"), ("Гідропарк", "Лівобережна"),
        ("Лівобережна", "Дарниця"), ("Дарниця", "Чернігівська"), ("Чернігівська", "Лісова"),

        # Зелена
        ("Сирець", "Дорогожичі"), ("Дорогожичі", "Лук'янівська"), ("Лук'янівська", "Золоті ворота"),
        ("Золоті ворота", "Палац спорту"), ("Палац спорту", "Кловська"), ("Кловська", "Печерська"),
        ("Печерська", "Звіренецька"), ("Звіренецька", "Видубичі"), ("Видубичі", "Славутич"), ("Славутич", "Осокорки"),
        ("Осокорки", "Позняки"), ("Позняки", "Харківська"), ("Харківська", "Вирлиця"), ("Вирлиця", "Бориспільська"),
        ("Бориспільська", "Червоний хутір"),

        # Синя
        ("Героїв Дніпра", "Мінська"), ("Мінська", "Оболонь"), ("Оболонь", "Почайна"), ("Почайна", "Тараса Шевченка"),
        ("Тараса Шевченка", "Контрактова площа"), ("Контрактова площа", "Поштова площа"),
        ("Поштова площа", "Майдан Незалежності"), ("Майдан Незалежності", "Площа Українських Героїв"),
        ("Площа Українських Героїв", "Олімпійська"), ("Олімпійська", "Палац \"Україна\""),
        ("Палац \"Україна\"", "Либідська"), ("Либідська", "Деміївська"), ("Деміївська", "Голосіївська"),
        ("Голосіївська", "Васильківська"), ("Васильківська", "Виставковий центр"),
        ("Виставковий центр", "Іподром"), ("Іподром", "Теремки"),

        # Пересадки
        ("Театральна", "Золоті ворота"), ("Майдан Незалежності", "Хрещатик"), ("Площа Українських Героїв", "Палац спорту")
    ]

    G = nx.Graph()
    for u, v in edges:
        G.add_edge(u, v, weight=1)
    return G

# Алгоритм Дейкстри з використанням бінарної купи
def dijkstra_heap(graph, start):
    distances = {node: float('inf') for node in graph.nodes}
    distances[start] = 0
    heap = [(0, start)]

    while heap:
        current_distance, current_node = heapq.heappop(heap)
        if current_distance > distances[current_node]:
            continue
        for neighbor in graph.neighbors(current_node):
            weight = graph[current_node][neighbor]["weight"]
            distance = current_distance + weight
            if distance < distances[neighbor]:
                distances[neighbor] = distance
                heapq.heappush(heap, (distance, neighbor))
    return distances

# Побудова графа
metro_graph = build_kyiv_metro_graph()
start_station = "Академмістечко"
distances_from_start = dijkstra_heap(metro_graph, start_station)

print("🔹 Найкоротші відстані від 'Академмістечко':")
for station in ["Теремки", "Сирець", "Арсенальна"]:
    print(f"  {station}: {distances_from_start[station]} станцій")
